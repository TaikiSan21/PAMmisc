# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

          - name: "Windows 32bit"
            artifact: "Windows-x86"
            os: windows-latest
            qt_version: '5.15.2'
            qt_arch: 'win32_msvc2019'
            openssl_version: 'Win32OpenSSL_Light-1_1_1k'
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars32.bat"
            vcpkg_triplet: 'x86-windows'

          - name: "Windows 64bit"
            artifact: "Windows-x64"
            os: windows-latest
            qt_version: '5.15.2'
            qt_arch: 'win64_msvc2019_64'
            openssl_version: 'Win64OpenSSL_Light-1_1_1k'
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
            qmake_extra_config: 'CONFIG+=sentry "VCPKG_PATH=c:\vcpkg\installed\x64-windows"'
            vcpkg_triplet: 'x64-windows'

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      DISPLAY: :0

    steps:
      - name: Install Xorg ubuntu-latest
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt-get install -y xorg

      - name: Start Xvfb virtual display
        if: runner.os == 'Linux'
        run: |
          sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &

      - name: Install XQuarts macOS
        if: runner.os == 'macOS'
        run: brew install xquartz --cask

      - name: Install OpenSSL on Windows (vcpkg)
        if: startsWith(matrix.config.os, 'windows')
        run: |
          c:\vcpkg\vcpkg install --recurse openssl --triplet ${{ matrix.config.vcpkg_triplet }}
        shell: cmd

      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: rcmdcheck

      - uses: r-lib/actions/check-r-package@v1

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
